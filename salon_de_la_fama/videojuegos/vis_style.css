/* @import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap'); */


body {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    /* height: 100vh; */
    /* margin: 0; */
  }

/* Algunos colores más específicos están indicados con notación hexadecimal. Existe una extensión 
de los navegadores que les permite obtener el código de un cierto color que puedan encontrar en 
páginas web. */
button {
    padding: 6px;
    background-color: gold;
    border-radius: 10px;
    border: 5px solid #B89E43;
    height: 100px;
    width: 100px;
    line-height: 25px;
    font-family: Arial, sans-serif;
    font-family: 'Press Start 2P', Arial, sans-serif;
}

select {
    background-color: #7FD0E3;
    border: 5px solid #558BA3;
    padding: 6px;
    border-radius: 10px;
    height: 100px;
    width: 100px;
    text-align: center;
    font-family: Arial, sans-serif;
    font-family: 'Press Start 2P', Arial, sans-serif;
}

svg {
    /* border: 1px solid black; */
    background-color: white;
}

.legend {
    /* border: 1px solid black; */
    display: flex;
    flex-direction: row;


}

.box {
  float: left;
  height: 20px;
  width: 20px;
  margin-bottom: 15px;
  border: 1px solid black;
  clear: both;
}

.leyendNA {
    background-color: #b196cb;
}

.leyendEU {
    background-color: #af8981;
}

.leyendJP {
    background-color: #eba0d4;
}

.leyendOther {
    background-color: #a6a6a6;
}

#leyenda {
    margin-left: 30px;
}

/* Para organizar los divs se utilizó la propiedad de Flexbox, que es muy útil y les puede servir
para sus propias tareas o proyectos. Para investigar más recomiendo revisar la siguiente guía de 
cómo utilizar Flexbox: https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */

/* Definimos el comportamiento del flexbox vertical, para que los elementos se organicen en forma
de columna y con un espacio similar entre cada uno*/
.flex-vertical { 
    display: flex;
    flex-direction: column;
    margin-right: 40px;
    justify-content: space-evenly;
    align-items: center;
    row-gap: 100px;
}

/* Definimos el comportamiento del flexbox horizontal, para que los elementos se organicen en
forma de fila y centrados (apegados)*/
.flex-horizontal {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-content: center;
}

h1 {
    margin-top: 10px;
    margin-bottom: 0px;
}


h4 {
    margin-top: 0px;
    margin-bottom: 20px;
}
